{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\TurboKeys\\\\frontend\\\\src\\\\components\\\\TypingTest\\\\TypingTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { typingAPI } from '../../services/api';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingTest = ({\n  mode,\n  language,\n  onTestComplete\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [words, setWords] = useState([]);\n  const [currentText, setCurrentText] = useState('');\n  const [typedText, setTypedText] = useState('');\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n  const [characters, setCharacters] = useState([]);\n  const [startTime, setStartTime] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(parseInt(mode.replace('s', '')));\n  const [isActive, setIsActive] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [isFocused, setIsFocused] = useState(true);\n  const [stats, setStats] = useState({\n    wpm: 0,\n    accuracy: 0,\n    charactersTyped: 0,\n    errorsCount: 0,\n    correctCharacters: 0,\n    timeElapsed: 0\n  });\n  const containerRef = useRef(null);\n\n  // Load words when component mounts\n  useEffect(() => {\n    const loadWords = async () => {\n      try {\n        const response = await typingAPI.getWords(language, 200);\n        setWords(response.words);\n        generateText(response.words);\n      } catch (error) {\n        console.error('Failed to load words:', error);\n        // Fallback words\n        const fallbackWords = ['the', 'quick', 'brown', 'fox', 'jumps', 'over', 'lazy', 'dog', 'pack', 'my', 'box', 'with', 'five', 'dozen', 'liquor', 'jugs', 'time', 'part', 'then', 'and', 'what', 'course', 'stand', 'to', 'home', 'around', 'over', 'might', 'move', 'to', 'just', 'these', 'must', 'look', 'move', 'could', 'go', 'begin', 'people', 'what', 'tell', 'year', 'high', 'there', 'eye', 'world', 'way', 'only', 'work', 'word', 'can', 'point', 'down', 'form', 'thing', 'govern', 'life', 'any', 'few', 'place', 'set'];\n        setWords(fallbackWords);\n        generateText(fallbackWords);\n      }\n    };\n    loadWords();\n  }, [language]);\n\n  // Generate random text from words\n  const generateText = useCallback(wordList => {\n    const shuffled = [...wordList].sort(() => 0.5 - Math.random());\n    const text = shuffled.slice(0, 50).join(' ');\n    setCurrentText(text);\n    setCharacters(text.split('').map((char, index) => ({\n      char,\n      status: index === 0 ? 'current' : 'untyped',\n      index\n    })));\n  }, []);\n  const startTest = useCallback(() => {\n    if (!isActive && !isCompleted) {\n      setIsActive(true);\n      setStartTime(Date.now());\n    }\n  }, [isActive, isCompleted]);\n  const handleCharacterInput = useCallback(char => {\n    if (isCompleted || currentCharIndex >= currentText.length) return;\n    const newTypedText = typedText + char;\n    setTypedText(newTypedText);\n    const newCharacters = [...characters];\n    const currentChar = currentText[currentCharIndex];\n\n    // Mark current character as correct or incorrect\n    newCharacters[currentCharIndex].status = char === currentChar ? 'correct' : 'incorrect';\n\n    // Move to next character\n    const nextIndex = currentCharIndex + 1;\n    setCurrentCharIndex(nextIndex);\n\n    // Set next character as current\n    if (nextIndex < currentText.length) {\n      newCharacters[nextIndex].status = 'current';\n    }\n    setCharacters(newCharacters);\n\n    // Complete test if all text is typed\n    if (nextIndex >= currentText.length) {\n      completeTest();\n    }\n  }, [isCompleted, currentCharIndex, currentText.length, typedText, characters, currentText]);\n  const handleBackspace = useCallback(() => {\n    if (currentCharIndex === 0) return;\n    const newTypedText = typedText.slice(0, -1);\n    setTypedText(newTypedText);\n    const newCharacters = [...characters];\n\n    // Reset current character to untyped\n    newCharacters[currentCharIndex].status = 'untyped';\n\n    // Move back one character\n    const prevIndex = currentCharIndex - 1;\n    setCurrentCharIndex(prevIndex);\n\n    // Set previous character as current\n    newCharacters[prevIndex].status = 'current';\n    setCharacters(newCharacters);\n  }, [currentCharIndex, typedText, characters]);\n  const calculateStats = useCallback(() => {\n    const timeElapsed = startTime ? (Date.now() - startTime) / 1000 : 0;\n    const correctCharacters = characters.filter(char => char.status === 'correct').length;\n    const incorrectCharacters = characters.filter(char => char.status === 'incorrect').length;\n    const totalTyped = correctCharacters + incorrectCharacters;\n    const wpm = timeElapsed > 0 ? Math.round(correctCharacters / 5 / (timeElapsed / 60)) : 0;\n    const accuracy = totalTyped > 0 ? Math.round(correctCharacters / totalTyped * 100) : 100;\n    return {\n      wpm,\n      accuracy,\n      charactersTyped: totalTyped,\n      errorsCount: incorrectCharacters,\n      correctCharacters,\n      timeElapsed: Math.round(timeElapsed)\n    };\n  }, [characters, startTime]);\n  const completeTest = useCallback(() => {\n    setIsActive(false);\n    setIsCompleted(true);\n    const finalStats = calculateStats();\n    setStats(finalStats);\n    onTestComplete(finalStats);\n  }, [calculateStats, onTestComplete]);\n  const resetTest = () => {\n    setTypedText('');\n    setCurrentCharIndex(0);\n    setStartTime(null);\n    setTimeLeft(parseInt(mode.replace('s', '')));\n    setIsActive(false);\n    setIsCompleted(false);\n    setStats({\n      wpm: 0,\n      accuracy: 0,\n      charactersTyped: 0,\n      errorsCount: 0,\n      correctCharacters: 0,\n      timeElapsed: 0\n    });\n    generateText(words);\n    if (containerRef.current) {\n      containerRef.current.focus();\n    }\n  };\n\n  // Update stats in real-time\n  useEffect(() => {\n    if (isActive && !isCompleted) {\n      const currentStats = calculateStats();\n      setStats(currentStats);\n    }\n  }, [characters, isActive, isCompleted, calculateStats]);\n  const getCharacterClassName = char => {\n    switch (char.status) {\n      case 'correct':\n        return 'text-green-400';\n      case 'incorrect':\n        return 'text-red-400 bg-red-100 dark:bg-red-900';\n      case 'current':\n        return 'bg-blue-500 text-white animate-pulse';\n      default:\n        return 'text-gray-600 dark:text-gray-400';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-4xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6 p-4 card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-primary-600\",\n            children: stats.wpm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 dark:text-gray-400\",\n            children: \"WPM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-green-600\",\n            children: [stats.accuracy, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 dark:text-gray-400\",\n            children: \"Accuracy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-blue-600\",\n            children: stats.errorsCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 dark:text-gray-400\",\n            children: \"Errors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-3xl font-bold text-orange-600\",\n          children: timeLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 dark:text-gray-400\",\n          children: \"Seconds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"mb-6 p-6 card typing-text min-h-[200px] leading-loose cursor-text focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-opacity-50 relative\",\n      tabIndex: 0,\n      onClick: () => {\n        var _containerRef$current;\n        return (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.focus();\n      },\n      children: [!isFocused && !isCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xl font-bold mb-2\",\n            children: \"Click here to focus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm\",\n            children: \"Start typing to begin the test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-mono select-none\",\n        children: characters.map((char, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${getCharacterClassName(char)} ${char.char === ' ' ? 'mr-1' : ''} transition-colors duration-100`,\n          children: char.char === ' ' ? '\\u00A0' : char.char\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), !isActive && !isCompleted && isFocused && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-6 p-4 bg-blue-50 dark:bg-blue-900 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-700 dark:text-blue-300\",\n        children: \"Start typing to begin the test. Time will start counting when you type the first character.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTest,\n        className: \"btn-secondary\",\n        children: \"Reset Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), isCompleted && user && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Save test result to backend\n          typingAPI.submitTest({\n            wpm: stats.wpm,\n            accuracy: stats.accuracy,\n            charactersTyped: stats.charactersTyped,\n            errorsCount: stats.errorsCount,\n            duration: parseInt(mode.replace('s', '')),\n            mode,\n            language,\n            text: currentText\n          });\n        },\n        className: \"btn-primary\",\n        children: \"Save Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), isCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 card text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"Test Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 dark:text-gray-400\",\n        children: [\"You typed at \", stats.wpm, \" WPM with \", stats.accuracy, \"% accuracy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 bg-gray-50 dark:bg-gray-700 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold\",\n            children: \"Characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: stats.charactersTyped\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 bg-gray-50 dark:bg-gray-700 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold\",\n            children: \"Correct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-600\",\n            children: stats.correctCharacters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 bg-gray-50 dark:bg-gray-700 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold\",\n            children: \"Errors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-600\",\n            children: stats.errorsCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 bg-gray-50 dark:bg-gray-700 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [stats.timeElapsed, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingTest, \"okeB3tOTmQJz0IIcO5pB97yfxgs=\", false, function () {\n  return [useAuth];\n});\n_c = TypingTest;\nexport default TypingTest;\nvar _c;\n$RefreshReg$(_c, \"TypingTest\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","typingAPI","useAuth","jsxDEV","_jsxDEV","TypingTest","mode","language","onTestComplete","_s","user","words","setWords","currentText","setCurrentText","typedText","setTypedText","currentCharIndex","setCurrentCharIndex","characters","setCharacters","startTime","setStartTime","timeLeft","setTimeLeft","parseInt","replace","isActive","setIsActive","isCompleted","setIsCompleted","isFocused","setIsFocused","stats","setStats","wpm","accuracy","charactersTyped","errorsCount","correctCharacters","timeElapsed","containerRef","loadWords","response","getWords","generateText","error","console","fallbackWords","wordList","shuffled","sort","Math","random","text","slice","join","split","map","char","index","status","startTest","Date","now","handleCharacterInput","length","newTypedText","newCharacters","currentChar","nextIndex","completeTest","handleBackspace","prevIndex","calculateStats","filter","incorrectCharacters","totalTyped","round","finalStats","resetTest","current","focus","currentStats","getCharacterClassName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","tabIndex","onClick","_containerRef$current","submitTest","duration","_c","$RefreshReg$"],"sources":["C:/GitHub/TurboKeys/frontend/src/components/TypingTest/TypingTest.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { TestMode, Language, TypingStats, TypingCharacter } from '../../types';\r\nimport { typingAPI } from '../../services/api';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\ninterface TypingTestProps {\r\n  mode: TestMode;\r\n  language: Language;\r\n  onTestComplete: (stats: TypingStats) => void;\r\n}\r\n\r\nconst TypingTest: React.FC<TypingTestProps> = ({ mode, language, onTestComplete }) => {\r\n  const { user } = useAuth();\r\n  const [words, setWords] = useState<string[]>([]);\r\n  const [currentText, setCurrentText] = useState<string>('');\r\n  const [typedText, setTypedText] = useState<string>('');\r\n  const [currentCharIndex, setCurrentCharIndex] = useState<number>(0);\r\n  const [characters, setCharacters] = useState<TypingCharacter[]>([]);\r\n  const [startTime, setStartTime] = useState<number | null>(null);\r\n  const [timeLeft, setTimeLeft] = useState<number>(parseInt(mode.replace('s', '')));\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n  const [isCompleted, setIsCompleted] = useState<boolean>(false);\r\n  const [isFocused, setIsFocused] = useState<boolean>(true);\r\n  const [stats, setStats] = useState<TypingStats>({\r\n    wpm: 0,\r\n    accuracy: 0,\r\n    charactersTyped: 0,\r\n    errorsCount: 0,\r\n    correctCharacters: 0,\r\n    timeElapsed: 0,\r\n  });\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Load words when component mounts\r\n  useEffect(() => {\r\n    const loadWords = async () => {\r\n      try {\r\n        const response = await typingAPI.getWords(language, 200);\r\n        setWords(response.words);\r\n        generateText(response.words);\r\n      } catch (error) {\r\n        console.error('Failed to load words:', error);\r\n        // Fallback words\r\n        const fallbackWords = [\r\n          'the', 'quick', 'brown', 'fox', 'jumps', 'over', 'lazy', 'dog',\r\n          'pack', 'my', 'box', 'with', 'five', 'dozen', 'liquor', 'jugs',\r\n          'time', 'part', 'then', 'and', 'what', 'course', 'stand', 'to',\r\n          'home', 'around', 'over', 'might', 'move', 'to', 'just', 'these',\r\n          'must', 'look', 'move', 'could', 'go', 'begin', 'people', 'what',\r\n          'tell', 'year', 'high', 'there', 'eye', 'world', 'way', 'only',\r\n          'work', 'word', 'can', 'point', 'down', 'form', 'thing', 'govern',\r\n          'life', 'any', 'few', 'place', 'set'\r\n        ];\r\n        setWords(fallbackWords);\r\n        generateText(fallbackWords);\r\n      }\r\n    };\r\n\r\n    loadWords();\r\n  }, [language]);\r\n\r\n  // Generate random text from words\r\n  const generateText = useCallback((wordList: string[]) => {\r\n    const shuffled = [...wordList].sort(() => 0.5 - Math.random());\r\n    const text = shuffled.slice(0, 50).join(' ');\r\n    setCurrentText(text);\r\n    setCharacters(text.split('').map((char, index) => ({\r\n      char,\r\n      status: index === 0 ? 'current' : 'untyped',\r\n      index,\r\n    })));\r\n  }, []);\r\n\r\n  const startTest = useCallback(() => {\r\n    if (!isActive && !isCompleted) {\r\n      setIsActive(true);\r\n      setStartTime(Date.now());\r\n    }\r\n  }, [isActive, isCompleted]);\r\n\r\n  const handleCharacterInput = useCallback((char: string) => {\r\n    if (isCompleted || currentCharIndex >= currentText.length) return;\r\n\r\n    const newTypedText = typedText + char;\r\n    setTypedText(newTypedText);\r\n\r\n    const newCharacters = [...characters];\r\n    const currentChar = currentText[currentCharIndex];\r\n    \r\n    // Mark current character as correct or incorrect\r\n    newCharacters[currentCharIndex].status = char === currentChar ? 'correct' : 'incorrect';\r\n    \r\n    // Move to next character\r\n    const nextIndex = currentCharIndex + 1;\r\n    setCurrentCharIndex(nextIndex);\r\n    \r\n    // Set next character as current\r\n    if (nextIndex < currentText.length) {\r\n      newCharacters[nextIndex].status = 'current';\r\n    }\r\n\r\n    setCharacters(newCharacters);\r\n\r\n    // Complete test if all text is typed\r\n    if (nextIndex >= currentText.length) {\r\n      completeTest();\r\n    }\r\n  }, [isCompleted, currentCharIndex, currentText.length, typedText, characters, currentText]);\r\n\r\n  const handleBackspace = useCallback(() => {\r\n    if (currentCharIndex === 0) return;\r\n\r\n    const newTypedText = typedText.slice(0, -1);\r\n    setTypedText(newTypedText);\r\n\r\n    const newCharacters = [...characters];\r\n    \r\n    // Reset current character to untyped\r\n    newCharacters[currentCharIndex].status = 'untyped';\r\n    \r\n    // Move back one character\r\n    const prevIndex = currentCharIndex - 1;\r\n    setCurrentCharIndex(prevIndex);\r\n    \r\n    // Set previous character as current\r\n    newCharacters[prevIndex].status = 'current';\r\n\r\n    setCharacters(newCharacters);\r\n  }, [currentCharIndex, typedText, characters]);\r\n\r\n  const calculateStats = useCallback((): TypingStats => {\r\n    const timeElapsed = startTime ? (Date.now() - startTime) / 1000 : 0;\r\n    const correctCharacters = characters.filter(char => char.status === 'correct').length;\r\n    const incorrectCharacters = characters.filter(char => char.status === 'incorrect').length;\r\n    const totalTyped = correctCharacters + incorrectCharacters;\r\n    \r\n    const wpm = timeElapsed > 0 ? Math.round((correctCharacters / 5) / (timeElapsed / 60)) : 0;\r\n    const accuracy = totalTyped > 0 ? Math.round((correctCharacters / totalTyped) * 100) : 100;\r\n\r\n    return {\r\n      wpm,\r\n      accuracy,\r\n      charactersTyped: totalTyped,\r\n      errorsCount: incorrectCharacters,\r\n      correctCharacters,\r\n      timeElapsed: Math.round(timeElapsed),\r\n    };\r\n  }, [characters, startTime]);\r\n\r\n  const completeTest = useCallback(() => {\r\n    setIsActive(false);\r\n    setIsCompleted(true);\r\n    const finalStats = calculateStats();\r\n    setStats(finalStats);\r\n    onTestComplete(finalStats);\r\n  }, [calculateStats, onTestComplete]);\r\n\r\n  const resetTest = () => {\r\n    setTypedText('');\r\n    setCurrentCharIndex(0);\r\n    setStartTime(null);\r\n    setTimeLeft(parseInt(mode.replace('s', '')));\r\n    setIsActive(false);\r\n    setIsCompleted(false);\r\n    setStats({\r\n      wpm: 0,\r\n      accuracy: 0,\r\n      charactersTyped: 0,\r\n      errorsCount: 0,\r\n      correctCharacters: 0,\r\n      timeElapsed: 0,\r\n    });\r\n    generateText(words);\r\n    \r\n    if (containerRef.current) {\r\n      containerRef.current.focus();\r\n    }\r\n  };\r\n\r\n  // Update stats in real-time\r\n  useEffect(() => {\r\n    if (isActive && !isCompleted) {\r\n      const currentStats = calculateStats();\r\n      setStats(currentStats);\r\n    }\r\n  }, [characters, isActive, isCompleted, calculateStats]);\r\n\r\n  const getCharacterClassName = (char: TypingCharacter) => {\r\n    switch (char.status) {\r\n      case 'correct':\r\n        return 'text-green-400';\r\n      case 'incorrect':\r\n        return 'text-red-400 bg-red-100 dark:bg-red-900';\r\n      case 'current':\r\n        return 'bg-blue-500 text-white animate-pulse';\r\n      default:\r\n        return 'text-gray-600 dark:text-gray-400';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-4xl mx-auto p-6\">\r\n      {/* Stats Display */}\r\n      <div className=\"flex justify-between items-center mb-6 p-4 card\">\r\n        <div className=\"flex space-x-6\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-2xl font-bold text-primary-600\">{stats.wpm}</div>\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">WPM</div>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <div className=\"text-2xl font-bold text-green-600\">{stats.accuracy}%</div>\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Accuracy</div>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <div className=\"text-2xl font-bold text-blue-600\">{stats.errorsCount}</div>\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Errors</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <div className=\"text-3xl font-bold text-orange-600\">{timeLeft}</div>\r\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Seconds</div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Text Display */}\r\n      <div \r\n        ref={containerRef}\r\n        className=\"mb-6 p-6 card typing-text min-h-[200px] leading-loose cursor-text focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-opacity-50 relative\"\r\n        tabIndex={0}\r\n        onClick={() => containerRef.current?.focus()}\r\n      >\r\n        {/* Focus indicator */}\r\n        {!isFocused && !isCompleted && (\r\n          <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 rounded-lg\">\r\n            <div className=\"text-white text-center\">\r\n              <div className=\"text-xl font-bold mb-2\">Click here to focus</div>\r\n              <div className=\"text-sm\">Start typing to begin the test</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"text-xl font-mono select-none\">\r\n          {characters.map((char, index) => (\r\n            <span\r\n              key={index}\r\n              className={`${getCharacterClassName(char)} ${char.char === ' ' ? 'mr-1' : ''} transition-colors duration-100`}\r\n            >\r\n              {char.char === ' ' ? '\\u00A0' : char.char}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status Messages */}\r\n      {!isActive && !isCompleted && isFocused && (\r\n        <div className=\"text-center mb-6 p-4 bg-blue-50 dark:bg-blue-900 rounded-lg\">\r\n          <p className=\"text-blue-700 dark:text-blue-300\">\r\n            Start typing to begin the test. Time will start counting when you type the first character.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Controls */}\r\n      <div className=\"flex justify-center space-x-4\">\r\n        <button\r\n          onClick={resetTest}\r\n          className=\"btn-secondary\"\r\n        >\r\n          Reset Test\r\n        </button>\r\n        {isCompleted && user && (\r\n          <button\r\n            onClick={() => {\r\n              // Save test result to backend\r\n              typingAPI.submitTest({\r\n                wpm: stats.wpm,\r\n                accuracy: stats.accuracy,\r\n                charactersTyped: stats.charactersTyped,\r\n                errorsCount: stats.errorsCount,\r\n                duration: parseInt(mode.replace('s', '')),\r\n                mode,\r\n                language,\r\n                text: currentText,\r\n              });\r\n            }}\r\n            className=\"btn-primary\"\r\n          >\r\n            Save Result\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Completion Message */}\r\n      {isCompleted && (\r\n        <div className=\"mt-6 p-4 card text-center\">\r\n          <h3 className=\"text-xl font-bold mb-2\">Test Completed!</h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">\r\n            You typed at {stats.wpm} WPM with {stats.accuracy}% accuracy\r\n          </p>\r\n          <div className=\"mt-4 grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n            <div className=\"p-2 bg-gray-50 dark:bg-gray-700 rounded\">\r\n              <div className=\"font-semibold\">Characters</div>\r\n              <div>{stats.charactersTyped}</div>\r\n            </div>\r\n            <div className=\"p-2 bg-gray-50 dark:bg-gray-700 rounded\">\r\n              <div className=\"font-semibold\">Correct</div>\r\n              <div className=\"text-green-600\">{stats.correctCharacters}</div>\r\n            </div>\r\n            <div className=\"p-2 bg-gray-50 dark:bg-gray-700 rounded\">\r\n              <div className=\"font-semibold\">Errors</div>\r\n              <div className=\"text-red-600\">{stats.errorsCount}</div>\r\n            </div>\r\n            <div className=\"p-2 bg-gray-50 dark:bg-gray-700 rounded\">\r\n              <div className=\"font-semibold\">Time</div>\r\n              <div>{stats.timeElapsed}s</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}