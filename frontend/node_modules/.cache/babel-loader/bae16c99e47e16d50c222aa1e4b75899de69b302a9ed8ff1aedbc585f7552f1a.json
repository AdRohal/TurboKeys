{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\TurboKeys\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: !!localStorage.getItem('token'),\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        user: action.payload,\n        token: action.payload.token || state.token,\n        error: null\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        user: null,\n        token: null\n      };\n    case 'AUTH_INIT_COMPLETE':\n      return {\n        ...state,\n        loading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        error: null\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    // Only auto-initialize auth if we're not on OAuth callback or profile completion pages\n    const currentPath = window.location.pathname;\n    const isAuthFlow = currentPath === '/oauth-callback' || currentPath === '/complete-profile';\n    if (!isAuthFlow) {\n      const initializeAuth = async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n          try {\n            // Don't dispatch AUTH_START here since we already set loading to true in initial state\n            const user = await authAPI.getCurrentUser();\n            dispatch({\n              type: 'AUTH_SUCCESS',\n              payload: {\n                ...user,\n                token\n              }\n            });\n          } catch (error) {\n            localStorage.removeItem('token');\n            dispatch({\n              type: 'AUTH_FAILURE',\n              payload: 'Session expired'\n            });\n          }\n        } else {\n          // No token, so we can stop loading without showing an error\n          dispatch({\n            type: 'AUTH_INIT_COMPLETE'\n          });\n        }\n      };\n      initializeAuth();\n    }\n  }, []);\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n\n      // If it's a User object (from OAuth), use it directly\n      if ('id' in credentials) {\n        const token = localStorage.getItem('token') || '';\n        const authUser = {\n          ...credentials,\n          token\n        };\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: authUser\n        });\n      } else {\n        // Otherwise, it's login credentials\n        const response = await authAPI.login(credentials);\n        localStorage.setItem('token', response.token);\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: response\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: error.message || 'Login failed'\n      });\n      throw error;\n    }\n  };\n  const register = async data => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const res = await authAPI.register(data);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: res.data\n      });\n      // ...any other logic...\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2;\n      let msg = 'Registration failed. Please try again.';\n      if (err !== null && err !== void 0 && (_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.error) {\n        msg = err.response.data.error;\n      } else if (err !== null && err !== void 0 && (_err$response2 = err.response) !== null && _err$response2 !== void 0 && _err$response2.data && typeof err.response.data === 'object' && Object.values(err.response.data).length > 0) {\n        const values = Object.values(err.response.data).filter(v => typeof v === 'string');\n        if (values.length > 0) msg = values[0];\n      } else if (err !== null && err !== void 0 && err.message && err.message !== 'Request failed with status code 400') {\n        msg = err.message;\n      }\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: msg\n      });\n      throw err;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","loading","error","authReducer","state","action","type","payload","AuthContext","undefined","AuthProvider","children","_s","dispatch","currentPath","window","location","pathname","isAuthFlow","initializeAuth","getCurrentUser","removeItem","login","credentials","authUser","response","setItem","message","register","data","res","err","_err$response","_err$response$data","_err$response2","msg","Object","values","length","filter","v","logout","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/GitHub/TurboKeys/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\r\nimport { User, AuthUser, LoginRequest, RegisterRequest } from '../types';\r\nimport { authAPI } from '../services/api';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ntype AuthAction =\r\n  | { type: 'AUTH_START' }\r\n  | { type: 'AUTH_SUCCESS'; payload: AuthUser }\r\n  | { type: 'AUTH_FAILURE'; payload: string }\r\n  | { type: 'AUTH_INIT_COMPLETE' }\r\n  | { type: 'LOGOUT' }\r\n  | { type: 'CLEAR_ERROR' };\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  loading: !!localStorage.getItem('token'),\r\n  error: null,\r\n};\r\n\r\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\r\n  switch (action.type) {\r\n    case 'AUTH_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case 'AUTH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n        token: action.payload.token || state.token,\r\n        error: null,\r\n      };\r\n    case 'AUTH_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        user: null,\r\n        token: null,\r\n      };\r\n    case 'AUTH_INIT_COMPLETE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        error: null,\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ninterface AuthContextType extends AuthState {\r\n  login: (credentials: LoginRequest | User) => Promise<void>;\r\n  register: (userData: RegisterRequest) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    // Only auto-initialize auth if we're not on OAuth callback or profile completion pages\r\n    const currentPath = window.location.pathname;\r\n    const isAuthFlow = currentPath === '/oauth-callback' || currentPath === '/complete-profile';\r\n    \r\n    if (!isAuthFlow) {\r\n      const initializeAuth = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          try {\r\n            // Don't dispatch AUTH_START here since we already set loading to true in initial state\r\n            const user = await authAPI.getCurrentUser();\r\n            dispatch({ type: 'AUTH_SUCCESS', payload: { ...user, token } });\r\n          } catch (error) {\r\n            localStorage.removeItem('token');\r\n            dispatch({ type: 'AUTH_FAILURE', payload: 'Session expired' });\r\n          }\r\n        } else {\r\n          // No token, so we can stop loading without showing an error\r\n          dispatch({ type: 'AUTH_INIT_COMPLETE' });\r\n        }\r\n      };\r\n\r\n      initializeAuth();\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginRequest | User) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      \r\n      // If it's a User object (from OAuth), use it directly\r\n      if ('id' in credentials) {\r\n        const token = localStorage.getItem('token') || '';\r\n        const authUser: AuthUser = { ...credentials, token };\r\n        dispatch({ type: 'AUTH_SUCCESS', payload: authUser });\r\n      } else {\r\n        // Otherwise, it's login credentials\r\n        const response = await authAPI.login(credentials);\r\n        localStorage.setItem('token', response.token);\r\n        dispatch({ type: 'AUTH_SUCCESS', payload: response });\r\n      }\r\n    } catch (error: any) {\r\n      dispatch({ type: 'AUTH_FAILURE', payload: error.message || 'Login failed' });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (data: RegisterRequest) => {\r\n    dispatch({ type: 'AUTH_START' });\r\n    try {\r\n      const res = await authAPI.register(data);\r\n      dispatch({ type: 'AUTH_SUCCESS', payload: res.data });\r\n      // ...any other logic...\r\n    } catch (err: any) {\r\n      let msg = 'Registration failed. Please try again.';\r\n      if (err?.response?.data?.error) {\r\n        msg = err.response.data.error;\r\n      } else if (\r\n        err?.response?.data &&\r\n        typeof err.response.data === 'object' &&\r\n        Object.values(err.response.data).length > 0\r\n      ) {\r\n        const values = Object.values(err.response.data).filter(v => typeof v === 'string');\r\n        if (values.length > 0) msg = values[0] as string;\r\n      } else if (err?.message && err.message !== 'Request failed with status code 400') {\r\n        msg = err.message;\r\n      }\r\n      dispatch({ type: 'AUTH_FAILURE', payload: msg });\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAmB,OAAO;AAE1F,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB1C,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,OAAO,EAAE,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxCE,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAgB,EAAEC,MAAkB,KAAgB;EACvE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QACL,GAAGF,KAAK;QACRH,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGE,KAAK;QACRH,OAAO,EAAE,KAAK;QACdJ,IAAI,EAAEQ,MAAM,CAACE,OAAO;QACpBT,KAAK,EAAEO,MAAM,CAACE,OAAO,CAACT,KAAK,IAAIM,KAAK,CAACN,KAAK;QAC1CI,KAAK,EAAE;MACT,CAAC;IACH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGE,KAAK;QACRH,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEG,MAAM,CAACE,OAAO;QACrBV,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,oBAAoB;MACvB,OAAO;QACL,GAAGM,KAAK;QACRH,OAAO,EAAE;MACX,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACL,GAAGG,KAAK;QACRP,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAI;QACXI,KAAK,EAAE;MACT,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGE,KAAK;QACRF,KAAK,EAAE;MACT,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AASD,MAAMI,WAAW,gBAAGnB,aAAa,CAA8BoB,SAAS,CAAC;AAMzE,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACR,KAAK,EAAES,QAAQ,CAAC,GAAGtB,UAAU,CAACY,WAAW,EAAEP,YAAY,CAAC;EAE/DJ,SAAS,CAAC,MAAM;IACd;IACA,MAAMsB,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;IAC5C,MAAMC,UAAU,GAAGJ,WAAW,KAAK,iBAAiB,IAAIA,WAAW,KAAK,mBAAmB;IAE3F,IAAI,CAACI,UAAU,EAAE;MACf,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;QACjC,MAAMrB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAIF,KAAK,EAAE;UACT,IAAI;YACF;YACA,MAAMD,IAAI,GAAG,MAAMJ,OAAO,CAAC2B,cAAc,CAAC,CAAC;YAC3CP,QAAQ,CAAC;cAAEP,IAAI,EAAE,cAAc;cAAEC,OAAO,EAAE;gBAAE,GAAGV,IAAI;gBAAEC;cAAM;YAAE,CAAC,CAAC;UACjE,CAAC,CAAC,OAAOI,KAAK,EAAE;YACdH,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;YAChCR,QAAQ,CAAC;cAAEP,IAAI,EAAE,cAAc;cAAEC,OAAO,EAAE;YAAkB,CAAC,CAAC;UAChE;QACF,CAAC,MAAM;UACL;UACAM,QAAQ,CAAC;YAAEP,IAAI,EAAE;UAAqB,CAAC,CAAC;QAC1C;MACF,CAAC;MAEDa,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG,MAAOC,WAAgC,IAAK;IACxD,IAAI;MACFV,QAAQ,CAAC;QAAEP,IAAI,EAAE;MAAa,CAAC,CAAC;;MAEhC;MACA,IAAI,IAAI,IAAIiB,WAAW,EAAE;QACvB,MAAMzB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;QACjD,MAAMwB,QAAkB,GAAG;UAAE,GAAGD,WAAW;UAAEzB;QAAM,CAAC;QACpDe,QAAQ,CAAC;UAAEP,IAAI,EAAE,cAAc;UAAEC,OAAO,EAAEiB;QAAS,CAAC,CAAC;MACvD,CAAC,MAAM;QACL;QACA,MAAMC,QAAQ,GAAG,MAAMhC,OAAO,CAAC6B,KAAK,CAACC,WAAW,CAAC;QACjDxB,YAAY,CAAC2B,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC3B,KAAK,CAAC;QAC7Ce,QAAQ,CAAC;UAAEP,IAAI,EAAE,cAAc;UAAEC,OAAO,EAAEkB;QAAS,CAAC,CAAC;MACvD;IACF,CAAC,CAAC,OAAOvB,KAAU,EAAE;MACnBW,QAAQ,CAAC;QAAEP,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEL,KAAK,CAACyB,OAAO,IAAI;MAAe,CAAC,CAAC;MAC5E,MAAMzB,KAAK;IACb;EACF,CAAC;EAED,MAAM0B,QAAQ,GAAG,MAAOC,IAAqB,IAAK;IAChDhB,QAAQ,CAAC;MAAEP,IAAI,EAAE;IAAa,CAAC,CAAC;IAChC,IAAI;MACF,MAAMwB,GAAG,GAAG,MAAMrC,OAAO,CAACmC,QAAQ,CAACC,IAAI,CAAC;MACxChB,QAAQ,CAAC;QAAEP,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEuB,GAAG,CAACD;MAAK,CAAC,CAAC;MACrD;IACF,CAAC,CAAC,OAAOE,GAAQ,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA,EAAAC,cAAA;MACjB,IAAIC,GAAG,GAAG,wCAAwC;MAClD,IAAIJ,GAAG,aAAHA,GAAG,gBAAAC,aAAA,GAAHD,GAAG,CAAEN,QAAQ,cAAAO,aAAA,gBAAAC,kBAAA,GAAbD,aAAA,CAAeH,IAAI,cAAAI,kBAAA,eAAnBA,kBAAA,CAAqB/B,KAAK,EAAE;QAC9BiC,GAAG,GAAGJ,GAAG,CAACN,QAAQ,CAACI,IAAI,CAAC3B,KAAK;MAC/B,CAAC,MAAM,IACL6B,GAAG,aAAHA,GAAG,gBAAAG,cAAA,GAAHH,GAAG,CAAEN,QAAQ,cAAAS,cAAA,eAAbA,cAAA,CAAeL,IAAI,IACnB,OAAOE,GAAG,CAACN,QAAQ,CAACI,IAAI,KAAK,QAAQ,IACrCO,MAAM,CAACC,MAAM,CAACN,GAAG,CAACN,QAAQ,CAACI,IAAI,CAAC,CAACS,MAAM,GAAG,CAAC,EAC3C;QACA,MAAMD,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACN,GAAG,CAACN,QAAQ,CAACI,IAAI,CAAC,CAACU,MAAM,CAACC,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,CAAC;QAClF,IAAIH,MAAM,CAACC,MAAM,GAAG,CAAC,EAAEH,GAAG,GAAGE,MAAM,CAAC,CAAC,CAAW;MAClD,CAAC,MAAM,IAAIN,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEJ,OAAO,IAAII,GAAG,CAACJ,OAAO,KAAK,qCAAqC,EAAE;QAChFQ,GAAG,GAAGJ,GAAG,CAACJ,OAAO;MACnB;MACAd,QAAQ,CAAC;QAAEP,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAE4B;MAAI,CAAC,CAAC;MAChD,MAAMJ,GAAG;IACX;EACF,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnB1C,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;IAChCR,QAAQ,CAAC;MAAEP,IAAI,EAAE;IAAS,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMoC,UAAU,GAAGA,CAAA,KAAM;IACvB7B,QAAQ,CAAC;MAAEP,IAAI,EAAE;IAAc,CAAC,CAAC;EACnC,CAAC;EAED,MAAMqC,KAAsB,GAAG;IAC7B,GAAGvC,KAAK;IACRkB,KAAK;IACLM,QAAQ;IACRa,MAAM;IACNC;EACF,CAAC;EAED,oBACE/C,OAAA,CAACa,WAAW,CAACoC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhC,QAAA,EAChCA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpC,EAAA,CAlGWF,YAAyC;AAAAuC,EAAA,GAAzCvC,YAAyC;AAoGtD,OAAO,MAAMwC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG9D,UAAU,CAACkB,WAAW,CAAC;EACvC,IAAI4C,OAAO,KAAK3C,SAAS,EAAE;IACzB,MAAM,IAAI4C,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}