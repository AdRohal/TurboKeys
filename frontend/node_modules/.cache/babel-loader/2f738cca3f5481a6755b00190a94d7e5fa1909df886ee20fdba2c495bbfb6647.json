{"ast":null,"code":"import React,{useState}from'react';import TypingTest from'../components/TypingTest/TypingTest';import{TestMode,Language}from'../types';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Home=()=>{const[selectedMode,setSelectedMode]=useState(TestMode.THIRTY_SECONDS);const[selectedLanguage,setSelectedLanguage]=useState(Language.ENGLISH);const[testKey,setTestKey]=useState(0);const handleTestComplete=stats=>{console.log('Test completed with stats:',stats);};const resetTest=()=>{setTestKey(prev=>prev+1);};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-300\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center mb-12\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-yellow-400 mb-2\",children:\"TurboKeys\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center mb-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2 justify-center\",children:Object.values(TestMode).map(mode=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSelectedMode(mode);resetTest();},className:`px-4 py-2 rounded text-sm font-medium transition-colors ${selectedMode===mode?'bg-yellow-400 text-gray-900':'bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-gray-300'}`,children:mode},mode))}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2 justify-center\",children:Object.values(Language).map(language=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSelectedLanguage(language);resetTest();},className:`px-4 py-2 rounded text-sm font-medium transition-colors ${selectedLanguage===language?'bg-yellow-400 text-gray-900':'bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-gray-300'}`,children:language==='korean'?'한국어':language},language))})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-8\",children:/*#__PURE__*/_jsx(TypingTest,{mode:selectedMode,language:selectedLanguage,onTestComplete:handleTestComplete},testKey)}),/*#__PURE__*/_jsx(\"div\",{className:\"max-w-4xl mx-auto mt-16 text-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 space-y-1\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Click on the text area to start \\u2022 Type the words exactly as shown \\u2022 Use backspace to correct mistakes\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your WPM and accuracy will be calculated in real-time\"})]})})]})});};export default Home;","map":{"version":3,"names":["React","useState","TypingTest","TestMode","Language","jsx","_jsx","jsxs","_jsxs","Home","selectedMode","setSelectedMode","THIRTY_SECONDS","selectedLanguage","setSelectedLanguage","ENGLISH","testKey","setTestKey","handleTestComplete","stats","console","log","resetTest","prev","className","children","Object","values","map","mode","onClick","language","onTestComplete"],"sources":["C:/GitHub/TurboKeys/frontend/src/pages/Home.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TypingTest from '../components/TypingTest/TypingTest';\r\nimport { TestMode, Language, TypingStats } from '../types';\r\n\r\nconst Home: React.FC = () => {\r\n  const [selectedMode, setSelectedMode] = useState<TestMode>(TestMode.THIRTY_SECONDS);\r\n  const [selectedLanguage, setSelectedLanguage] = useState<Language>(Language.ENGLISH);\r\n  const [testKey, setTestKey] = useState<number>(0);\r\n\r\n  const handleTestComplete = (stats: TypingStats) => {\r\n    console.log('Test completed with stats:', stats);\r\n  };\r\n\r\n  const resetTest = () => {\r\n    setTestKey(prev => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-300\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        {/* Header - More compact */}\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-3xl font-bold text-yellow-400 mb-2\">\r\n            TurboKeys\r\n          </h1>\r\n        </div>\r\n\r\n        {/* Mode Selection - Centered and compact */}\r\n        <div className=\"flex justify-center mb-12\">\r\n          <div className=\"flex flex-col items-center gap-6\">\r\n            <div className=\"flex flex-wrap gap-2 justify-center\">\r\n              {Object.values(TestMode).map((mode) => (\r\n                <button\r\n                  key={mode}\r\n                  onClick={() => {\r\n                    setSelectedMode(mode);\r\n                    resetTest();\r\n                  }}\r\n                  className={`px-4 py-2 rounded text-sm font-medium transition-colors ${\r\n                    selectedMode === mode\r\n                      ? 'bg-yellow-400 text-gray-900'\r\n                      : 'bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-gray-300'\r\n                  }`}\r\n                >\r\n                  {mode}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"flex flex-wrap gap-2 justify-center\">\r\n              {Object.values(Language).map((language) => (\r\n                <button\r\n                  key={language}\r\n                  onClick={() => {\r\n                    setSelectedLanguage(language);\r\n                    resetTest();\r\n                  }}\r\n                  className={`px-4 py-2 rounded text-sm font-medium transition-colors ${\r\n                    selectedLanguage === language\r\n                      ? 'bg-yellow-400 text-gray-900'\r\n                      : 'bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-gray-300'\r\n                  }`}\r\n                >\r\n                  {language === 'korean' ? '한국어' : language}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Typing Test - Full width, no visible container like Monkeytype */}\r\n        <div className=\"max-w-7xl mx-auto px-8\">\r\n          <TypingTest\r\n            key={testKey}\r\n            mode={selectedMode}\r\n            language={selectedLanguage}\r\n            onTestComplete={handleTestComplete}\r\n          />\r\n        </div>\r\n\r\n        {/* Instructions - More compact and bottom */}\r\n        <div className=\"max-w-4xl mx-auto mt-16 text-center\">\r\n          <div className=\"text-sm text-gray-500 space-y-1\">\r\n            <p>Click on the text area to start • Type the words exactly as shown • Use backspace to correct mistakes</p>\r\n            <p>Your WPM and accuracy will be calculated in real-time</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}