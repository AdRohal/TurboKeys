{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\TurboKeys\\\\frontend\\\\src\\\\pages\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TestMode, Language } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [selectedMode, setSelectedMode] = useState(TestMode.THIRTY_SECONDS);\n  const [selectedLanguage, setSelectedLanguage] = useState(Language.ENGLISH);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 dark:bg-gray-900 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-gray-900 dark:text-gray-100 mb-2\",\n          children: \"TurboKeys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 dark:text-gray-400\",\n          children: \"Test your typing speed and accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium text-gray-700 dark:text-gray-300 mr-2\",\n              children: \"Mode:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), Object.values(TestMode).map(mode => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setSelectedMode(mode);\n              },\n              className: `px-3 py-1 rounded text-sm font-medium transition-colors ${selectedMode === mode ? 'bg-primary-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'}`,\n              children: mode\n            }, mode, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium text-gray-700 dark:text-gray-300 mr-2\",\n              children: \"Language:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), Object.values(Language).map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setSelectedLanguage(language);\n              },\n              className: `px-3 py-1 rounded text-sm font-medium transition-colors capitalize ${selectedLanguage === language ? 'bg-primary-600 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'}`,\n              children: language === 'korean' ? '한국어' : language\n            }, language, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto card p-8 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 dark:text-gray-400\",\n          children: \"Typing test component will be added here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-2xl mx-auto mt-8 card p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 text-gray-900 dark:text-gray-100\",\n          children: \"How to use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2 text-gray-600 dark:text-gray-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2022 Click on the text area to focus and start typing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2022 Type the words exactly as shown - no input field needed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2022 Use backspace to correct mistakes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2022 Your WPM and accuracy will be calculated in real-time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2022 Create an account to save your results and compete on leaderboards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2022 Press any key to start the timer automatically\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"1BNeLVlCLLo4qguRafBJAgvWCq8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","TestMode","Language","jsxDEV","_jsxDEV","Home","_s","selectedMode","setSelectedMode","THIRTY_SECONDS","selectedLanguage","setSelectedLanguage","ENGLISH","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","mode","onClick","language","_c","$RefreshReg$"],"sources":["C:/GitHub/TurboKeys/frontend/src/pages/Home.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TestMode, Language } from '../types';\r\n\r\nconst Home: React.FC = () => {\r\n  const [selectedMode, setSelectedMode] = useState<TestMode>(TestMode.THIRTY_SECONDS);\r\n  const [selectedLanguage, setSelectedLanguage] = useState<Language>(Language.ENGLISH);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-8\">\r\n      <div className=\"container mx-auto px-4\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-gray-100 mb-2\">\r\n            TurboKeys\r\n          </h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">\r\n            Test your typing speed and accuracy\r\n          </p>\r\n        </div>\r\n\r\n        {/* Mode Selection */}\r\n        <div className=\"flex justify-center mb-8\">\r\n          <div className=\"card p-4\">\r\n            <div className=\"flex flex-wrap gap-2 mb-4\">\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mr-2\">\r\n                Mode:\r\n              </span>\r\n              {Object.values(TestMode).map((mode) => (\r\n                <button\r\n                  key={mode}\r\n                  onClick={() => {\r\n                    setSelectedMode(mode);\r\n                  }}\r\n                  className={`px-3 py-1 rounded text-sm font-medium transition-colors ${\r\n                    selectedMode === mode\r\n                      ? 'bg-primary-600 text-white'\r\n                      : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'\r\n                  }`}\r\n                >\r\n                  {mode}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mr-2\">\r\n                Language:\r\n              </span>\r\n              {Object.values(Language).map((language) => (\r\n                <button\r\n                  key={language}\r\n                  onClick={() => {\r\n                    setSelectedLanguage(language);\r\n                  }}\r\n                  className={`px-3 py-1 rounded text-sm font-medium transition-colors capitalize ${\r\n                    selectedLanguage === language\r\n                      ? 'bg-primary-600 text-white'\r\n                      : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'\r\n                  }`}\r\n                >\r\n                  {language === 'korean' ? '한국어' : language}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Typing Test */}\r\n        <div className=\"max-w-4xl mx-auto card p-8 text-center\">\r\n          <p className=\"text-gray-600 dark:text-gray-400\">\r\n            Typing test component will be added here\r\n          </p>\r\n        </div>\r\n\r\n        {/* Instructions */}\r\n        <div className=\"max-w-2xl mx-auto mt-8 card p-6\">\r\n          <h2 className=\"text-xl font-bold mb-4 text-gray-900 dark:text-gray-100\">\r\n            How to use\r\n          </h2>\r\n          <div className=\"space-y-2 text-gray-600 dark:text-gray-400\">\r\n            <p>• Click on the text area to focus and start typing</p>\r\n            <p>• Type the words exactly as shown - no input field needed!</p>\r\n            <p>• Use backspace to correct mistakes</p>\r\n            <p>• Your WPM and accuracy will be calculated in real-time</p>\r\n            <p>• Create an account to save your results and compete on leaderboards</p>\r\n            <p>• Press any key to start the timer automatically</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}