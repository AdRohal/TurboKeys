{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';import{authAPI}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,token:localStorage.getItem('token'),loading:!!localStorage.getItem('token'),// Set loading to true if there's a token\nerror:null};const authReducer=(state,action)=>{switch(action.type){case'AUTH_START':return{...state,loading:true,error:null};case'AUTH_SUCCESS':return{...state,loading:false,user:action.payload,token:action.payload.token||state.token,error:null};case'AUTH_FAILURE':return{...state,loading:false,error:action.payload,user:null,token:null};case'AUTH_INIT_COMPLETE':return{...state,loading:false};case'LOGOUT':return{...state,user:null,token:null,error:null};case'CLEAR_ERROR':return{...state,error:null};default:return state;}};const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);useEffect(()=>{// Only auto-initialize auth if we're not on OAuth callback or profile completion pages\nconst currentPath=window.location.pathname;const isAuthFlow=currentPath==='/oauth-callback'||currentPath==='/complete-profile';if(!isAuthFlow){const initializeAuth=async()=>{const token=localStorage.getItem('token');if(token){try{// Don't dispatch AUTH_START here since we already set loading to true in initial state\nconst user=await authAPI.getCurrentUser();dispatch({type:'AUTH_SUCCESS',payload:{...user,token}});}catch(error){localStorage.removeItem('token');dispatch({type:'AUTH_FAILURE',payload:'Session expired'});}}else{// No token, so we can stop loading without showing an error\ndispatch({type:'AUTH_INIT_COMPLETE'});}};initializeAuth();}},[]);const login=async credentials=>{try{dispatch({type:'AUTH_START'});// If it's a User object (from OAuth), use it directly\nif('id'in credentials){const token=localStorage.getItem('token')||'';const authUser={...credentials,token};dispatch({type:'AUTH_SUCCESS',payload:authUser});}else{// Otherwise, it's login credentials\nconst response=await authAPI.login(credentials);localStorage.setItem('token',response.token);dispatch({type:'AUTH_SUCCESS',payload:response});}}catch(error){dispatch({type:'AUTH_FAILURE',payload:error.message||'Login failed'});throw error;}};const register=async userData=>{try{dispatch({type:'AUTH_START'});const response=await authAPI.register(userData);localStorage.setItem('token',response.token);dispatch({type:'AUTH_SUCCESS',payload:response});}catch(error){dispatch({type:'AUTH_FAILURE',payload:error.message||'Registration failed'});throw error;}};const logout=()=>{localStorage.removeItem('token');dispatch({type:'LOGOUT'});};const clearError=()=>{dispatch({type:'CLEAR_ERROR'});};const value={...state,login,register,logout,clearError};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","jsx","_jsx","initialState","user","token","localStorage","getItem","loading","error","authReducer","state","action","type","payload","AuthContext","undefined","AuthProvider","_ref","children","dispatch","currentPath","window","location","pathname","isAuthFlow","initializeAuth","getCurrentUser","removeItem","login","credentials","authUser","response","setItem","message","register","userData","logout","clearError","value","Provider","useAuth","context","Error"],"sources":["C:/GitHub/TurboKeys/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\r\nimport { User, AuthUser, LoginRequest, RegisterRequest } from '../types';\r\nimport { authAPI } from '../services/api';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ntype AuthAction =\r\n  | { type: 'AUTH_START' }\r\n  | { type: 'AUTH_SUCCESS'; payload: AuthUser }\r\n  | { type: 'AUTH_FAILURE'; payload: string }\r\n  | { type: 'AUTH_INIT_COMPLETE' }\r\n  | { type: 'LOGOUT' }\r\n  | { type: 'CLEAR_ERROR' };\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  loading: !!localStorage.getItem('token'), // Set loading to true if there's a token\r\n  error: null,\r\n};\r\n\r\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\r\n  switch (action.type) {\r\n    case 'AUTH_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case 'AUTH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n        token: action.payload.token || state.token,\r\n        error: null,\r\n      };\r\n    case 'AUTH_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        user: null,\r\n        token: null,\r\n      };\r\n    case 'AUTH_INIT_COMPLETE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        error: null,\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ninterface AuthContextType extends AuthState {\r\n  login: (credentials: LoginRequest | User) => Promise<void>;\r\n  register: (userData: RegisterRequest) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    // Only auto-initialize auth if we're not on OAuth callback or profile completion pages\r\n    const currentPath = window.location.pathname;\r\n    const isAuthFlow = currentPath === '/oauth-callback' || currentPath === '/complete-profile';\r\n    \r\n    if (!isAuthFlow) {\r\n      const initializeAuth = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          try {\r\n            // Don't dispatch AUTH_START here since we already set loading to true in initial state\r\n            const user = await authAPI.getCurrentUser();\r\n            dispatch({ type: 'AUTH_SUCCESS', payload: { ...user, token } });\r\n          } catch (error) {\r\n            localStorage.removeItem('token');\r\n            dispatch({ type: 'AUTH_FAILURE', payload: 'Session expired' });\r\n          }\r\n        } else {\r\n          // No token, so we can stop loading without showing an error\r\n          dispatch({ type: 'AUTH_INIT_COMPLETE' });\r\n        }\r\n      };\r\n\r\n      initializeAuth();\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginRequest | User) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      \r\n      // If it's a User object (from OAuth), use it directly\r\n      if ('id' in credentials) {\r\n        const token = localStorage.getItem('token') || '';\r\n        const authUser: AuthUser = { ...credentials, token };\r\n        dispatch({ type: 'AUTH_SUCCESS', payload: authUser });\r\n      } else {\r\n        // Otherwise, it's login credentials\r\n        const response = await authAPI.login(credentials);\r\n        localStorage.setItem('token', response.token);\r\n        dispatch({ type: 'AUTH_SUCCESS', payload: response });\r\n      }\r\n    } catch (error: any) {\r\n      dispatch({ type: 'AUTH_FAILURE', payload: error.message || 'Login failed' });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData: RegisterRequest) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      const response = await authAPI.register(userData);\r\n      localStorage.setItem('token', response.token);\r\n      dispatch({ type: 'AUTH_SUCCESS', payload: response });\r\n    } catch (error: any) {\r\n      dispatch({ type: 'AUTH_FAILURE', payload: error.message || 'Registration failed' });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}