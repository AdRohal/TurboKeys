{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\TurboKeys\\\\frontend\\\\src\\\\contexts\\\\NotificationContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext(undefined);\nlet notificationId = 0;\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const timeouts = useRef({});\n  const removeNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(n => n.id !== id));\n    if (timeouts.current[id]) {\n      clearTimeout(timeouts.current[id]);\n      delete timeouts.current[id];\n    }\n  }, []);\n  const notify = useCallback((message, type) => {\n    const id = ++notificationId;\n    setNotifications(prev => [...prev, {\n      id,\n      message,\n      type\n    }]);\n    if (timeouts.current[id]) clearTimeout(timeouts.current[id]);\n    timeouts.current[id] = setTimeout(() => {\n      removeNotification(id);\n    }, 5000);\n  }, [removeNotification]);\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      notify\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 right-4 z-[9999] flex flex-col space-y-3 items-end\",\n      children: notifications.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `min-w-[220px] max-w-xs px-4 py-3 rounded shadow-lg border-l-4 relative animate-slide-in-right\n              ${n.type === 'error' ? 'bg-red-50 dark:bg-red-900/70 border-red-500 text-red-700 dark:text-red-300' : ''}\n              ${n.type === 'success' ? 'bg-green-50 dark:bg-green-900/70 border-green-500 text-green-700 dark:text-green-300' : ''}\n              ${n.type === 'warning' ? 'bg-yellow-50 dark:bg-yellow-900/70 border-yellow-500 text-yellow-700 dark:text-yellow-300' : ''}\n            `,\n        style: {\n          borderStyle: 'solid',\n          borderWidth: '1px 0 1px 4px',\n          borderRadius: '8px',\n          borderRight: 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold capitalize\",\n          children: n.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mx-2\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: n.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-1 right-2 text-lg text-gray-400 hover:text-gray-700 dark:hover:text-white\",\n          onClick: () => removeNotification(n.id),\n          \"aria-label\": \"Close notification\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, n.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationProvider, \"5SRyJF+CdBISvWWKAI8BIDr8nxU=\");\n_c = NotificationProvider;\nexport function useNotification() {\n  _s2();\n  const ctx = useContext(NotificationContext);\n  if (!ctx) throw new Error('useNotification must be used within a NotificationProvider');\n  return ctx;\n}\n\n// Add this to your main App.tsx (wrap <NotificationProvider> around your app)\n_s2(useNotification, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useRef","jsxDEV","_jsxDEV","NotificationContext","undefined","notificationId","NotificationProvider","children","_s","notifications","setNotifications","timeouts","removeNotification","id","prev","filter","n","current","clearTimeout","notify","message","type","setTimeout","Provider","value","className","map","style","borderStyle","borderWidth","borderRadius","borderRight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","useNotification","_s2","ctx","Error","$RefreshReg$"],"sources":["C:/GitHub/TurboKeys/frontend/src/contexts/NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode, useCallback, useRef } from 'react';\r\n\r\nexport type NotificationType = 'success' | 'error' | 'warning';\r\n\r\nexport interface Notification {\r\n  id: number;\r\n  message: string;\r\n  type: NotificationType;\r\n}\r\n\r\ninterface NotificationContextProps {\r\n  notify: (message: string, type: NotificationType) => void;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextProps | undefined>(undefined);\r\n\r\nlet notificationId = 0;\r\n\r\n\r\nexport const NotificationProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const timeouts = useRef<{ [id: number]: NodeJS.Timeout | number } >({});\r\n\r\n  const removeNotification = useCallback((id: number) => {\r\n    setNotifications((prev) => prev.filter((n) => n.id !== id));\r\n    if (timeouts.current[id]) {\r\n      clearTimeout(timeouts.current[id]);\r\n      delete timeouts.current[id];\r\n    }\r\n  }, []);\r\n\r\n  const notify = useCallback((message: string, type: NotificationType) => {\r\n    const id = ++notificationId;\r\n    setNotifications((prev) => [...prev, { id, message, type }]);\r\n    if (timeouts.current[id]) clearTimeout(timeouts.current[id]);\r\n    timeouts.current[id] = setTimeout(() => {\r\n      removeNotification(id);\r\n    }, 5000);\r\n  }, [removeNotification]);\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{ notify }}>\r\n      {children}\r\n      <div className=\"fixed top-4 right-4 z-[9999] flex flex-col space-y-3 items-end\">\r\n        {notifications.map((n) => (\r\n          <div\r\n            key={n.id}\r\n            className={`min-w-[220px] max-w-xs px-4 py-3 rounded shadow-lg border-l-4 relative animate-slide-in-right\r\n              ${n.type === 'error' ? 'bg-red-50 dark:bg-red-900/70 border-red-500 text-red-700 dark:text-red-300' : ''}\r\n              ${n.type === 'success' ? 'bg-green-50 dark:bg-green-900/70 border-green-500 text-green-700 dark:text-green-300' : ''}\r\n              ${n.type === 'warning' ? 'bg-yellow-50 dark:bg-yellow-900/70 border-yellow-500 text-yellow-700 dark:text-yellow-300' : ''}\r\n            `}\r\n            style={{ borderStyle: 'solid', borderWidth: '1px 0 1px 4px', borderRadius: '8px', borderRight: 'none' }}\r\n          >\r\n            <span className=\"font-semibold capitalize\">{n.type}</span>\r\n            <span className=\"mx-2\">|</span>\r\n            <span>{n.message}</span>\r\n            <button\r\n              className=\"absolute top-1 right-2 text-lg text-gray-400 hover:text-gray-700 dark:hover:text-white\"\r\n              onClick={() => removeNotification(n.id)}\r\n              aria-label=\"Close notification\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useNotification() {\r\n  const ctx = useContext(NotificationContext);\r\n  if (!ctx) throw new Error('useNotification must be used within a NotificationProvider');\r\n  return ctx;\r\n}\r\n\r\n// Add this to your main App.tsx (wrap <NotificationProvider> around your app)\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}