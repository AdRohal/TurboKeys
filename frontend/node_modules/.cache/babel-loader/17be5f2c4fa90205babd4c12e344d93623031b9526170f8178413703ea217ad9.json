{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\TurboKeys\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        user: action.payload,\n        token: action.payload.token,\n        error: null\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        user: null,\n        token: null\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        error: null\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          dispatch({\n            type: 'AUTH_START'\n          });\n          const user = await authAPI.getCurrentUser();\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: {\n              ...user,\n              token\n            }\n          });\n        } catch (error) {\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'AUTH_FAILURE',\n            payload: 'Session expired'\n          });\n        }\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n\n      // If it's a User object (from OAuth), use it directly\n      if ('id' in credentials) {\n        const token = localStorage.getItem('token') || '';\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: {\n            ...credentials,\n            token\n          }\n        });\n      } else {\n        // Otherwise, it's login credentials\n        const response = await authAPI.login(credentials);\n        localStorage.setItem('token', response.token);\n        dispatch({\n          type: 'AUTH_SUCCESS',\n          payload: response\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: error.message || 'Login failed'\n      });\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n      const response = await authAPI.register(userData);\n      localStorage.setItem('token', response.token);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: response\n      });\n    } catch (error) {\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: error.message || 'Registration failed'\n      });\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","loading","error","authReducer","state","action","type","payload","AuthContext","undefined","AuthProvider","children","_s","dispatch","initializeAuth","getCurrentUser","removeItem","login","credentials","response","setItem","message","register","userData","logout","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/GitHub/TurboKeys/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\r\nimport { User, AuthUser, LoginRequest, RegisterRequest } from '../types';\r\nimport { authAPI } from '../services/api';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ntype AuthAction =\r\n  | { type: 'AUTH_START' }\r\n  | { type: 'AUTH_SUCCESS'; payload: AuthUser }\r\n  | { type: 'AUTH_FAILURE'; payload: string }\r\n  | { type: 'LOGOUT' }\r\n  | { type: 'CLEAR_ERROR' };\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\r\n  switch (action.type) {\r\n    case 'AUTH_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case 'AUTH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n        token: action.payload.token,\r\n        error: null,\r\n      };\r\n    case 'AUTH_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        user: null,\r\n        token: null,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        error: null,\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ninterface AuthContextType extends AuthState {\r\n  login: (credentials: LoginRequest | User) => Promise<void>;\r\n  register: (userData: RegisterRequest) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          dispatch({ type: 'AUTH_START' });\r\n          const user = await authAPI.getCurrentUser();\r\n          dispatch({ type: 'AUTH_SUCCESS', payload: { ...user, token } });\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: 'AUTH_FAILURE', payload: 'Session expired' });\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginRequest | User) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      \r\n      // If it's a User object (from OAuth), use it directly\r\n      if ('id' in credentials) {\r\n        const token = localStorage.getItem('token') || '';\r\n        dispatch({ type: 'AUTH_SUCCESS', payload: { ...credentials, token } });\r\n      } else {\r\n        // Otherwise, it's login credentials\r\n        const response = await authAPI.login(credentials);\r\n        localStorage.setItem('token', response.token);\r\n        dispatch({ type: 'AUTH_SUCCESS', payload: response });\r\n      }\r\n    } catch (error: any) {\r\n      dispatch({ type: 'AUTH_FAILURE', payload: error.message || 'Login failed' });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData: RegisterRequest) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      const response = await authAPI.register(userData);\r\n      localStorage.setItem('token', response.token);\r\n      dispatch({ type: 'AUTH_SUCCESS', payload: response });\r\n    } catch (error: any) {\r\n      dispatch({ type: 'AUTH_FAILURE', payload: error.message || 'Registration failed' });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}