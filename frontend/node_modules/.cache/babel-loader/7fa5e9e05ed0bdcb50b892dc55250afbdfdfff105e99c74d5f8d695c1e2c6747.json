{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\TurboKeys\\\\frontend\\\\src\\\\pages\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TestMode, Language } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [selectedMode, setSelectedMode] = useState(TestMode.THIRTY_SECONDS);\n  const [selectedLanguage, setSelectedLanguage] = useState(Language.ENGLISH);\n  const [testKey, setTestKey] = useState(0);\n  const handleTestComplete = stats => {\n    console.log('Test completed with stats:', stats);\n  };\n  const resetTest = () => {\n    setTestKey(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-gray-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-yellow-400 mb-2\",\n          children: \"TurboKeys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2 justify-center\",\n            children: Object.values(TestMode).map(mode => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setSelectedMode(mode);\n                resetTest();\n              },\n              className: `px-4 py-2 rounded text-sm font-medium transition-colors ${selectedMode === mode ? 'bg-yellow-400 text-gray-900' : 'bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-gray-300'}`,\n              children: mode\n            }, mode, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2 justify-center\",\n            children: Object.values(Language).map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setSelectedLanguage(language);\n                resetTest();\n              },\n              className: `px-4 py-2 rounded text-sm font-medium transition-colors ${selectedLanguage === language ? 'bg-yellow-400 text-gray-900' : 'bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-gray-300'}`,\n              children: language === 'korean' ? '한국어' : language\n            }, language, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card p-8 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-300 mb-4\",\n            children: \"Typing Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 mb-4\",\n            children: [\"Selected Mode: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-yellow-400\",\n              children: selectedMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 mb-6\",\n            children: [\"Selected Language: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-yellow-400\",\n              children: selectedLanguage === 'korean' ? '한국어' : selectedLanguage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"Typing test component will be implemented here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto mt-16 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click on the text area to start \\u2022 Type the words exactly as shown \\u2022 Use backspace to correct mistakes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your WPM and accuracy will be calculated in real-time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Y0cKe2oASQujUvmmQPsmY6SUd1Q=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","TestMode","Language","jsxDEV","_jsxDEV","Home","_s","selectedMode","setSelectedMode","THIRTY_SECONDS","selectedLanguage","setSelectedLanguage","ENGLISH","testKey","setTestKey","handleTestComplete","stats","console","log","resetTest","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","mode","onClick","language","_c","$RefreshReg$"],"sources":["C:/GitHub/TurboKeys/frontend/src/pages/Home.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TestMode, Language, TypingStats } from '../types';\r\n\r\nconst Home: React.FC = () => {\r\n  const [selectedMode, setSelectedMode] = useState<TestMode>(TestMode.THIRTY_SECONDS);\r\n  const [selectedLanguage, setSelectedLanguage] = useState<Language>(Language.ENGLISH);\r\n  const [testKey, setTestKey] = useState<number>(0);\r\n\r\n  const handleTestComplete = (stats: TypingStats) => {\r\n    console.log('Test completed with stats:', stats);\r\n  };\r\n\r\n  const resetTest = () => {\r\n    setTestKey(prev => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-300\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        {/* Header - More compact */}\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-3xl font-bold text-yellow-400 mb-2\">\r\n            TurboKeys\r\n          </h1>\r\n        </div>\r\n\r\n        {/* Mode Selection - Centered and compact */}\r\n        <div className=\"flex justify-center mb-12\">\r\n          <div className=\"flex flex-col items-center gap-6\">\r\n            <div className=\"flex flex-wrap gap-2 justify-center\">\r\n              {Object.values(TestMode).map((mode) => (\r\n                <button\r\n                  key={mode}\r\n                  onClick={() => {\r\n                    setSelectedMode(mode);\r\n                    resetTest();\r\n                  }}\r\n                  className={`px-4 py-2 rounded text-sm font-medium transition-colors ${\r\n                    selectedMode === mode\r\n                      ? 'bg-yellow-400 text-gray-900'\r\n                      : 'bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-gray-300'\r\n                  }`}\r\n                >\r\n                  {mode}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"flex flex-wrap gap-2 justify-center\">\r\n              {Object.values(Language).map((language) => (\r\n                <button\r\n                  key={language}\r\n                  onClick={() => {\r\n                    setSelectedLanguage(language);\r\n                    resetTest();\r\n                  }}\r\n                  className={`px-4 py-2 rounded text-sm font-medium transition-colors ${\r\n                    selectedLanguage === language\r\n                      ? 'bg-yellow-400 text-gray-900'\r\n                      : 'bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-gray-300'\r\n                  }`}\r\n                >\r\n                  {language === 'korean' ? '한국어' : language}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Typing Test - Full width, no visible container like Monkeytype */}\r\n        <div className=\"max-w-7xl mx-auto px-8\">\r\n          <div className=\"card p-8 text-center\">\r\n            <h2 className=\"text-2xl font-bold text-gray-300 mb-4\">Typing Test</h2>\r\n            <p className=\"text-gray-400 mb-4\">\r\n              Selected Mode: <span className=\"text-yellow-400\">{selectedMode}</span>\r\n            </p>\r\n            <p className=\"text-gray-400 mb-6\">\r\n              Selected Language: <span className=\"text-yellow-400\">{selectedLanguage === 'korean' ? '한국어' : selectedLanguage}</span>\r\n            </p>\r\n            <p className=\"text-gray-500\">\r\n              Typing test component will be implemented here.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Instructions - More compact and bottom */}\r\n        <div className=\"max-w-4xl mx-auto mt-16 text-center\">\r\n          <div className=\"text-sm text-gray-500 space-y-1\">\r\n            <p>Click on the text area to start • Type the words exactly as shown • Use backspace to correct mistakes</p>\r\n            <p>Your WPM and accuracy will be calculated in real-time</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}