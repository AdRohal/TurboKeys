{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\TurboKeys\\\\frontend\\\\src\\\\contexts\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { Theme } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  theme: localStorage.getItem('theme') || Theme.LIGHT\n};\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_THEME':\n      return {\n        ...state,\n        theme: action.payload\n      };\n    case 'TOGGLE_THEME':\n      return {\n        ...state,\n        theme: state.theme === Theme.LIGHT ? Theme.DARK : Theme.LIGHT\n      };\n    default:\n      return state;\n  }\n};\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(themeReducer, initialState);\n  useEffect(() => {\n    const root = window.document.documentElement;\n    root.classList.remove('light', 'dark');\n    root.classList.add(state.theme);\n    localStorage.setItem('theme', state.theme);\n\n    // Force scrollbar theme update\n    const style = document.createElement('style');\n    style.textContent = `\n      ::-webkit-scrollbar-track { background: var(--scrollbar-track) !important; }\n      ::-webkit-scrollbar-thumb { background: var(--scrollbar-thumb) !important; }\n      ::-webkit-scrollbar-thumb:hover { background: var(--scrollbar-thumb-hover) !important; }\n    `;\n    document.head.appendChild(style);\n\n    // Remove the style after a short delay\n    setTimeout(() => {\n      if (style.parentNode) {\n        style.parentNode.removeChild(style);\n      }\n    }, 100);\n  }, [state.theme]);\n  const setTheme = theme => {\n    dispatch({\n      type: 'SET_THEME',\n      payload: theme\n    });\n  };\n  const toggleTheme = () => {\n    dispatch({\n      type: 'TOGGLE_THEME'\n    });\n  };\n  const value = {\n    ...state,\n    setTheme,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","Theme","jsxDEV","_jsxDEV","initialState","theme","localStorage","getItem","LIGHT","themeReducer","state","action","type","payload","DARK","ThemeContext","undefined","ThemeProvider","children","_s","dispatch","root","window","document","documentElement","classList","remove","add","setItem","style","createElement","textContent","head","appendChild","setTimeout","parentNode","removeChild","setTheme","toggleTheme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/GitHub/TurboKeys/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\r\nimport { Theme } from '../types';\r\n\r\ninterface ThemeState {\r\n  theme: Theme;\r\n}\r\n\r\ntype ThemeAction = \r\n  | { type: 'SET_THEME'; payload: Theme }\r\n  | { type: 'TOGGLE_THEME' };\r\n\r\nconst initialState: ThemeState = {\r\n  theme: (localStorage.getItem('theme') as Theme) || Theme.LIGHT,\r\n};\r\n\r\nconst themeReducer = (state: ThemeState, action: ThemeAction): ThemeState => {\r\n  switch (action.type) {\r\n    case 'SET_THEME':\r\n      return {\r\n        ...state,\r\n        theme: action.payload,\r\n      };\r\n    case 'TOGGLE_THEME':\r\n      return {\r\n        ...state,\r\n        theme: state.theme === Theme.LIGHT ? Theme.DARK : Theme.LIGHT,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ninterface ThemeContextType extends ThemeState {\r\n  setTheme: (theme: Theme) => void;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(themeReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const root = window.document.documentElement;\r\n    root.classList.remove('light', 'dark');\r\n    root.classList.add(state.theme);\r\n    localStorage.setItem('theme', state.theme);\r\n    \r\n    // Force scrollbar theme update\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      ::-webkit-scrollbar-track { background: var(--scrollbar-track) !important; }\r\n      ::-webkit-scrollbar-thumb { background: var(--scrollbar-thumb) !important; }\r\n      ::-webkit-scrollbar-thumb:hover { background: var(--scrollbar-thumb-hover) !important; }\r\n    `;\r\n    document.head.appendChild(style);\r\n    \r\n    // Remove the style after a short delay\r\n    setTimeout(() => {\r\n      if (style.parentNode) {\r\n        style.parentNode.removeChild(style);\r\n      }\r\n    }, 100);\r\n  }, [state.theme]);\r\n\r\n  const setTheme = (theme: Theme) => {\r\n    dispatch({ type: 'SET_THEME', payload: theme });\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    dispatch({ type: 'TOGGLE_THEME' });\r\n  };\r\n\r\n  const value: ThemeContextType = {\r\n    ...state,\r\n    setTheme,\r\n    toggleTheme,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}